#include "U8glib.h"
#include <Keyboard.h>


U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_DEV_0 | U8G_I2C_OPT_NO_ACK | U8G_I2C_OPT_FAST); // Fast I2C / TWI

// 'base back', 128x64px
const unsigned char ABC [] PROGMEM = {
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0xc0, 0xf0, 0x00, 0x7e, 0x00, 0x07, 0xc0, 0x07, 0xc0, 0x03, 0xf8, 0x00, 0xfe, 0x00, 0x1f, 0x83, 
	0x80, 0xf8, 0x00, 0x7f, 0x00, 0x0f, 0xc0, 0x07, 0xe0, 0x03, 0xf8, 0x00, 0xff, 0x00, 0x3f, 0x81, 
	0x80, 0x28, 0x00, 0x31, 0x00, 0x18, 0x40, 0x06, 0x30, 0x01, 0x08, 0x00, 0x43, 0x00, 0x21, 0x81, 
	0x80, 0x68, 0x00, 0x33, 0x00, 0x10, 0x00, 0x06, 0x10, 0x01, 0x20, 0x00, 0x48, 0x00, 0x60, 0x01, 
	0x80, 0x6c, 0x00, 0x3f, 0x00, 0x10, 0x00, 0x06, 0x10, 0x01, 0xe0, 0x00, 0x78, 0x00, 0x60, 0x01, 
	0x80, 0x7c, 0x00, 0x33, 0x80, 0x10, 0x00, 0x06, 0x10, 0x01, 0x20, 0x00, 0x48, 0x00, 0x67, 0x81, 
	0x80, 0xfe, 0x00, 0x31, 0x80, 0x10, 0x00, 0x06, 0x10, 0x01, 0x0c, 0x00, 0x40, 0x00, 0x61, 0x81, 
	0x80, 0x86, 0x00, 0x31, 0x80, 0x18, 0x40, 0x06, 0x30, 0x01, 0x0c, 0x00, 0x40, 0x00, 0x21, 0x81, 
	0x81, 0xef, 0x00, 0x7f, 0x00, 0x0f, 0xc0, 0x07, 0xe0, 0x03, 0xfc, 0x00, 0xf8, 0x00, 0x3f, 0x81, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0xee, 0x00, 0x3f, 0x00, 0x07, 0xe0, 0x0f, 0x70, 0x03, 0xe0, 0x01, 0xc7, 0x00, 0x63, 0x81, 
	0x80, 0xee, 0x00, 0x3f, 0x00, 0x03, 0xe0, 0x0f, 0x70, 0x03, 0xe0, 0x01, 0xc7, 0x00, 0x73, 0x81, 
	0x80, 0xc4, 0x00, 0x0c, 0x00, 0x00, 0x80, 0x06, 0xe0, 0x00, 0x80, 0x00, 0xee, 0x00, 0x39, 0x01, 
	0x80, 0xc4, 0x00, 0x0c, 0x00, 0x00, 0x80, 0x07, 0x80, 0x00, 0x80, 0x00, 0xee, 0x00, 0x39, 0x01, 
	0x80, 0xfc, 0x00, 0x0c, 0x00, 0x00, 0x80, 0x07, 0x80, 0x00, 0x80, 0x00, 0xaa, 0x00, 0x2d, 0x01, 
	0x80, 0xc4, 0x00, 0x0c, 0x00, 0x10, 0x80, 0x06, 0xc0, 0x00, 0x84, 0x00, 0xba, 0x00, 0x25, 0x01, 
	0x80, 0xc4, 0x00, 0x0c, 0x00, 0x10, 0x80, 0x06, 0x60, 0x00, 0x8c, 0x00, 0x92, 0x00, 0x27, 0x01, 
	0x80, 0xc4, 0x00, 0x0c, 0x00, 0x18, 0x80, 0x06, 0x20, 0x00, 0x8c, 0x00, 0x82, 0x00, 0x23, 0x01, 
	0x81, 0xee, 0x00, 0x3f, 0x00, 0x0f, 0x80, 0x0f, 0x38, 0x03, 0xfc, 0x01, 0xef, 0x00, 0x7b, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x38, 0x00, 0x3e, 0x00, 0x07, 0x00, 0x0f, 0xc0, 0x00, 0xf8, 0x00, 0xfe, 0x00, 0x7b, 0x81, 
	0x80, 0xec, 0x00, 0x3f, 0x80, 0x0d, 0xc0, 0x0f, 0xe0, 0x01, 0xf8, 0x00, 0xfe, 0x00, 0x73, 0x81, 
	0x80, 0xc6, 0x00, 0x11, 0x80, 0x18, 0xc0, 0x06, 0x30, 0x01, 0x18, 0x00, 0x92, 0x00, 0x21, 0x01, 
	0x80, 0x82, 0x00, 0x11, 0x80, 0x10, 0x60, 0x06, 0x20, 0x01, 0x80, 0x00, 0x92, 0x00, 0x21, 0x01, 
	0x81, 0x82, 0x00, 0x1f, 0x80, 0x10, 0x60, 0x07, 0xe0, 0x01, 0xf0, 0x00, 0x10, 0x00, 0x21, 0x01, 
	0x81, 0x82, 0x00, 0x1e, 0x00, 0x10, 0x60, 0x07, 0xc0, 0x00, 0x38, 0x00, 0x10, 0x00, 0x21, 0x01, 
	0x80, 0x82, 0x00, 0x10, 0x00, 0x10, 0x40, 0x06, 0x60, 0x03, 0x08, 0x00, 0x10, 0x00, 0x21, 0x01, 
	0x80, 0xc6, 0x00, 0x10, 0x00, 0x18, 0xc0, 0x06, 0x30, 0x03, 0x08, 0x00, 0x10, 0x00, 0x33, 0x01, 
	0x80, 0x7c, 0x00, 0x7e, 0x00, 0x0f, 0x80, 0x0f, 0x38, 0x03, 0xf8, 0x00, 0x7c, 0x00, 0x1f, 0x01, 
	0x80, 0x10, 0x00, 0x00, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x0c, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0xe7, 0x80, 0x39, 0xc0, 0x0e, 0x70, 0x07, 0x38, 0x00, 0xfc, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0xe7, 0x80, 0x39, 0xc0, 0x0c, 0x60, 0x07, 0x38, 0x00, 0xfc, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x63, 0x00, 0x36, 0xc0, 0x06, 0xc0, 0x01, 0x30, 0x00, 0x98, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x62, 0x00, 0x36, 0xc0, 0x03, 0x80, 0x01, 0xe0, 0x00, 0x98, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x26, 0x00, 0x3f, 0xc0, 0x03, 0x80, 0x00, 0xe0, 0x00, 0x30, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x36, 0x00, 0x3f, 0x80, 0x03, 0x80, 0x00, 0x40, 0x00, 0x60, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x14, 0x00, 0x19, 0x80, 0x06, 0xc0, 0x00, 0x40, 0x00, 0x44, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x1c, 0x00, 0x19, 0x80, 0x04, 0x60, 0x00, 0x40, 0x00, 0xc4, 0x00, 0x00, 0x01, 
	0x80, 0x00, 0x00, 0x18, 0x00, 0x19, 0x80, 0x1e, 0xf0, 0x01, 0xf0, 0x00, 0xfc, 0x00, 0x00, 0x01, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc
};

char ABCD[] = "abcdefghijklmnopqrstuvwxyz";
#define POT A0
#define buttonPin 2


int cnt = 0;


bool ledState = false;
bool buttonPressed = false;

void setup() {
  u8g.setFont(u8g_font_tpssb);
  u8g.setColorIndex(1);

  Serial.begin(115200);

  pinMode(POT, INPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(buttonPin, INPUT_PULLUP);

}




void loop() {

  int buttonState = digitalRead(buttonPin);

    int cnt = map(analogRead(POT), 0, 1023, 0, 25);

    u8g.firstPage();
    do {
      if ((cnt >= 0) && (cnt < 7)) {
        u8g.drawFrame(5 + (17.5 * cnt), 0, 13, 14);
      } else if ((cnt >= 7) && (cnt < 14)) {
        u8g.drawFrame(5 + (17.5 * (cnt - 7)), 17, 13, 14);
      } else if ((cnt >= 14) && (cnt < 21)) {
        u8g.drawFrame(5 + (17.5 * (cnt - 14)), ((17 * 2) - 1), 13, 14);
      } else if ((cnt >= 21) && (cnt < 26)) {
        u8g.drawFrame(5 + (17.5 * (cnt - 20)), ((17 * 3) - 1), 13, 14);
      }

      u8g.drawBitmapP(0, 0, 128 / 8, 64, ABC);
    } while (u8g.nextPage());

  if (buttonState == LOW) {
    digitalWrite(LED_BUILTIN, HIGH);
		
    Keyboard.press(ABCD[cnt]);
  } else {
    digitalWrite(LED_BUILTIN, LOW);
    Keyboard.releaseAll();
  }

  delay(50);
}

